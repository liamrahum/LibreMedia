import 'dart:convert';
import 'package:LibreMedia/settingsmanager.dart';
import 'package:http/http.dart' as http;
import 'package:LibreMedia/variables.dart';

int resolutionIndex = 2; // Max Resolution
int videosToFetch = 8;

class Channel {
  final String name;
  final String id;
  final String pfp;
  final String description;

  final int subCount;

  final bool isFamilyFriendly;
  final bool isAutoGenerated; // Need to ignore channels like this.

  final List<String> latestVideosIDs;

  const Channel(
      {required this.name,
      required this.id,
      required this.pfp,
      required this.description,
      required this.isFamilyFriendly,
      required this.isAutoGenerated,
      this.subCount = 0,
      this.latestVideosIDs = const []});

  factory Channel.fromJson(Map<String, dynamic> json) {
    List<String> latestVideosIDs = [];
    List<dynamic> latestVideos = json['latestVideos'];
    for (int i = 0;
        i <
            (latestVideos.length < videosToFetch
                ? latestVideos.length
                : videosToFetch);
        i++) {
          
      latestVideosIDs.add(latestVideos[i]['videoId']);
    }
    return Channel(
        name: json['author'],
        id: json['authorId'],
        pfp: json['authorThumbnails'][resolutionIndex]['url'],
        description: json['description'],
        isFamilyFriendly: json['isFamilyFriendly'],
        isAutoGenerated: json['autoGenerated'],
        subCount: json['subCount'],
        latestVideosIDs: latestVideosIDs);
  }
}

Future<Channel> fetchChannel(String videoId) async {
  final response =
      await http.get(Uri.parse('${await SettingsManager().getInstanceAPI()}channels/$videoId'));
  var responseBody = utf8.decode(response.bodyBytes);
  if (response.statusCode != 200) {
    throw Exception('Failed to load video');
  }
  return Channel.fromJson(jsonDecode(responseBody));
}
//TODO: randomize search results